{"version":3,"sources":["graphData/provider.js","graphData/Query.js","context/context.tsx","components/card/card.component.tsx","components/search-pokemon/search-pokemon.jsx","components/card-list/card-list.component.tsx","pages/home/home.jsx","pages/pokedex/pokedex.jsx","routes.jsx","App.tsx","index.tsx"],"names":["errorLink","onError","graphQLErrors","networkError","map","message","path","console","log","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","PokemonGraphProvider","props","ApolloProvider","children","LOAD_POKEMONS","gql","PokemonContext","createContext","PokemonProvider","useState","pokemons","setPokemons","data","useQuery","useEffect","Provider","value","onSearchPokemon","event","target","searchedPokemon","filter","pokemon","name","toLocaleLowerCase","includes","onRemoveFilters","CardComponent","to","className","width","src","id","alt","SearchPokemon","context","useContext","type","placeholder","onChange","onClick","CardListComponent","Home","Pokedex","RouterApp","basename","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGMA,EAAYC,aAAQ,YAAoC,IAAlCC,EAAiC,EAAjCA,cAAiC,EAAlBC,aACtCD,GACDA,EAAcE,KAAI,YAAsB,IAApBC,EAAmB,EAAnBA,QAAmB,EAAVC,KAC3BC,QAAQC,IAAI,gBAAiBH,SAK7BI,EAAOC,eAAK,CAChBV,EACA,IAAIW,IAAS,CAACC,IAAK,4BAGRC,EAAS,IAAIC,IAAa,CACrCC,MAAO,IAAIC,IACXP,KAAMA,IAGKQ,EAAuB,SAACC,GAEnC,OACE,cAACC,EAAA,EAAD,CAAgBN,OAAQA,EAAxB,SACGK,EAAME,Y,wCCvBAC,EAAgBC,YAAH,iHCsDbC,EAAiBC,wBAAc,IAE/BC,EAA4B,SAAC,GAAkB,IAAhBL,EAAe,EAAfA,SAE1C,EAAgCM,mBAAoB,IAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEOC,EAAQC,YAAST,GAAjBQ,KAEPE,qBAAU,WACLF,IACDtB,QAAQC,IAAI,iBAAkBqB,GAC9BD,EAAYC,EAAKF,aAElB,CAACE,IAcJ,OACE,cAACN,EAAeS,SAAhB,CACEC,MAAO,CACLN,WACAO,gBAhBkB,SAACC,GACvB,IAAMF,EAAQE,EAAMC,OAAOH,MAErBI,EAAkBV,EAASW,QAAO,SAACC,GAAD,OACtCA,EAAQC,KAAKC,oBAAoBC,SAAST,EAAMQ,wBAClDb,EAAYS,IAYRM,gBATkB,SAACR,GACvBP,EAAYD,KAIZ,SAOGP,KCvEQwB,G,MAXmC,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QACnD,OACE,cAAC,IAAD,CAAMM,GAAG,eAAT,SACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,MAAM,MAAMC,IAAG,wDAAmDT,EAAQU,GAA3D,QAAqEC,IAAI,KAC5FX,EAAQC,YCKFW,EAhBO,WAEpB,IAAMC,EAAUC,qBAAW9B,GAE3B,OACE,qCACE,uBACE+B,KAAK,SACLC,YAAY,kBACZC,SAAUJ,EAAQlB,kBAEpB,wBAAQuB,QAASL,EAAQT,gBAAzB,+BCYSe,G,MAnBqB,WAElC,IAAQ/B,EAAa0B,qBAAW9B,GAAxBI,SAIR,OAFApB,QAAQC,IAAI,oBAAqBmB,GAI/B,sBAAKmB,UAAU,UAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACGnB,EAASvB,KAAI,SAACmC,GACb,OAAO,8BAAsB,cAAC,EAAD,CAAeA,QAASA,KAApCA,EAAQU,cCLpBU,EATF,WAEX,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCHSC,EANC,WACd,OACE,4CCeWC,EAVG,WAEhB,OACE,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,cAAC,IAAD,CAAOxD,KAAK,IAAIyD,OAAK,EAACC,UAAWL,IACjC,cAAC,IAAD,CAAOrD,KAAK,WAAW0D,UAAWJ,QCUzBK,EAfH,WAEV,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,WCRVoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec2298fd.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql, from, HttpLink } from \"@apollo/client\";\r\nimport { onError } from '@apollo/client/link/error';\r\n\r\nconst errorLink = onError(({graphQLErrors, networkError}) => {\r\n  if(graphQLErrors) {\r\n    graphQLErrors.map(({message, path}) => {\r\n      console.log('Error GraphQl', message)\r\n    })\r\n  }\r\n})\r\n\r\nconst link = from([\r\n  errorLink,\r\n  new HttpLink({uri: 'http://localhost:4000'})\r\n])\r\n\r\nexport const client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: link\r\n});\r\n\r\nexport const PokemonGraphProvider = (props) => {\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {props.children}\r\n    </ApolloProvider>\r\n  )\r\n\r\n}\r\n\r\nexport default PokemonGraphProvider;","import { gql } from '@apollo/client';\r\n\r\nexport const LOAD_POKEMONS = gql`\r\n  query PokemonQuery {\r\n    pokemons {\r\n      id\r\n      name\r\n      url\r\n    }\r\n  }\r\n`","import { useQuery } from '@apollo/client';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport { LOAD_POKEMONS } from '../graphData/Query';\r\n\r\ntype Pokemon = {\r\n  id: number;\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\ntype PokemonContextType = {\r\n  pokemons: Pokemon[],\r\n  onSearchPokemon: any,\r\n  onRemoveFilters: any\r\n}\r\n\r\nconst initialPokemonList = [\r\n  {\r\n    id: 1,\r\n    name: 'Bulbasaur'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ivysaur'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Venusaur'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Charmander'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Charmeleon'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Charizard'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Squirtle'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Wartortle'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Blastoise'\r\n  }\r\n\r\n]\r\n\r\nexport const PokemonContext = createContext({} as PokemonContextType);\r\n\r\nexport const PokemonProvider: React.FC = ({ children }) => {\r\n\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  \r\n  const {data} = useQuery(LOAD_POKEMONS)\r\n\r\n  useEffect(() => {\r\n    if(data) {\r\n      console.log('context effect', data)\r\n      setPokemons(data.pokemons)\r\n    }\r\n  }, [data])\r\n\r\n  const onSearchPokemon = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    \r\n    const searchedPokemon = pokemons.filter((pokemon) =>\r\n      pokemon.name.toLocaleLowerCase().includes(value.toLocaleLowerCase()));\r\n    setPokemons(searchedPokemon);\r\n  }\r\n\r\n  const onRemoveFilters = (event: any) => {\r\n    setPokemons(pokemons)\r\n  }\r\n\r\n  return (\r\n    <PokemonContext.Provider\r\n      value={{\r\n        pokemons,\r\n        onSearchPokemon,\r\n        onRemoveFilters\r\n      }}\r\n    >\r\n      {children}\r\n    </PokemonContext.Provider>\r\n  )\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './card.styles.css'\r\n\r\ninterface PokemonInterface {\r\n  pokemon: any\r\n}\r\n\r\nconst CardComponent: React.FC<PokemonInterface> = ({ pokemon }) => {\r\n  return (\r\n    <Link to=\"/pokedex/:id\">\r\n      <div className='card-container'>\r\n        <img width='100' src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`} alt=\"\" />\r\n        {pokemon.name}\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default CardComponent;","import React, {useContext} from 'react'\r\nimport { PokemonContext } from '../../context/context';\r\n\r\nconst SearchPokemon = () => {\r\n\r\n  const context = useContext(PokemonContext)\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='search'\r\n        placeholder='Find a pokemon!'\r\n        onChange={context.onSearchPokemon}\r\n      />\r\n      <button onClick={context.onRemoveFilters}>Remove Filter</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchPokemon;","import React, { useContext } from 'react'\r\nimport { PokemonContext } from '../../context/context'\r\nimport CardComponent from '../card/card.component'\r\nimport SearchPokemon from '../search-pokemon/search-pokemon'\r\nimport './card-list.styles.css'\r\n\r\n\r\nconst CardListComponent: React.FC = () => {\r\n\r\n  const { pokemons } = useContext(PokemonContext)\r\n\r\n  console.log('provider context ', pokemons)\r\n\r\n  return (\r\n\r\n    <div className='wrapper'>\r\n      <SearchPokemon />\r\n      <div className='card-list'>\r\n        {pokemons.map((pokemon) => {\r\n          return <div key={pokemon.id}><CardComponent pokemon={pokemon} /></div>\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardListComponent;","import React from 'react';\r\nimport { PokemonProvider } from '../../context/context';\r\nimport CardList from './../../components/card-list/card-list.component';\r\n\r\n\r\nconst Home = () => {\r\n\r\n  return(\r\n    <PokemonProvider>\r\n      <CardList/>\r\n    </PokemonProvider>\r\n  )\r\n}\r\n\r\nexport default Home;","const Pokedex = () => {\r\n  return (\r\n    <span>Pokedex</span>\r\n  )\r\n}\r\n\r\nexport default Pokedex;","import React from 'react';\r\n\r\nimport { Route, HashRouter } from 'react-router-dom';\r\n\r\nimport Home from './pages/home/home';\r\nimport Pokedex from './pages/pokedex/pokedex';\r\n\r\nconst RouterApp = () => {\r\n\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <Route path='/' exact component={Home} />\r\n      <Route path='/pokedex' component={Pokedex} />\r\n    </HashRouter >\r\n  )\r\n}\r\n\r\nexport default RouterApp;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { PokemonGraphProvider } from './graphData/provider';\nimport RouterApp from './routes';\n\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <PokemonGraphProvider>\n        <BrowserRouter>\n          <RouterApp></RouterApp>\n        </BrowserRouter>\n\n      </PokemonGraphProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}